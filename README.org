[[https://travis-ci.org/threatgrid/ring-turnstile-middleware][https://travis-ci.org/threatgrid/ring-turnstile-middleware.png?branch=master]]

* ring-turnstile-middleware

Ring middleware for the Turnstile rate limiting service

** Basic Usage

Use =wrap-rate-limit= to create an instance of the middleware, wrap your handler with it:

#+BEGIN_SRC clojure

(require '[ring.middleware.turnstile :refer [wrap-rate-limit]]
         '[ring.util.response :refer [response]])

(def app (-> your-routes
             (wrap-rate-limit {:redis-conf {}
                               :key-prefix "your-api"
                               :limits [(ip-limit 200)]))

;; 200 requests per hour per IP address

#+END_SRC

** Advanced usage

*** Custom rate limit handler

If you want to do some specific operations when a call is rate limited, you can define your own rate limit handler:

#+BEGIN_SRC clojure

(require '[ring.middleware.turnstile :refer [wrap-rate-limit]]
         '[ring.util.response :refer [response]])

(def app (-> your-routes
             (wrap-rate-limit {:redis-conf {}
                               :key-prefix "your-api"
                               :limits [(ip-limit 200)]
                               :rate-limit-handler 
                               (fn [request next-slot-in-ms]
                                {:status 429
                                 :body (format "Too many requests, try later in %d ms"
                                               next-slot-in-ms)})}))
#+END_SRC

*** Compose rate limits

You can compose your limits with the `combine-limits` function:

#+BEGIN_SRC clojure

(require '[ring.middleware.turnstile :refer [wrap-rate-limit combine-limits]]
         '[ring.util.response :refer [response]])

(def app (-> your-routes
             (wrap-rate-limit {:redis-conf {}
                               :key-prefix "your-api"
                               :limits [(combine-limits (ip-limit 200)
                                                        (header-limit 4 "x-id"))]))

;; 200 requests per hour per IP address and `x-id` header

#+END_SRC

The limit key is composed by the key of all rate limiters.

** License

Copyright Â© 2018 Cisco Systems
Distributed under the Eclipse Public License either version 1.0 or (at your option) any later version.
