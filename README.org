[[https://travis-ci.org/threatgrid/ring-turnstile-middleware][https://travis-ci.org/threatgrid/ring-turnstile-middleware.png?branch=master]]

* ring-turnstile-middleware

Ring middleware for the Turnstile rate limiting service

** Usage

Use =wrap-rate-limit-fn= to create an instance of the middleware, wrap your routes with it:

#+BEGIN_SRC clojure

(require '[ring.middleware.turnstile :refer [wrap-rate-limit-fn]]
         '[ring.util.response :refer [response]])

(def handler [request]
  (response {:foo "bar"}))

(def app
  (let [wrap-rate-limit
        (wrap-rate-limit-fn {:exceptions [{:ip "127.0.0.1"}]
                             :limits [{:key [:ip :method]
                                       :default 240
                                       :override {["10.2.34.5" "GET"] 1000}}]}
                            (fn [request]
                              {:ip (:remote-addr request)
                               :method (:request-method request)}))]
    (wrap-rate-limit handler)))

(def handler [request]
  (response {:foo "bar"}))

#+END_SRC

| Option             | Description                                                                                                                                |
|--------------------+--------------------------------------------------------------------------------------------------------------------------------------------|
| exceptions         | collection of filter maps for which no rate limit should be applied                                                                        |
| limits             | a collection of rate limits                                                                                                                |
| limits.[].key      | a collection of fields that composes the rate limit ID. They are provided by the fn passes as the second parameter of =wrap-rate-limit-fn= |
| limits.[].default  | default amount of requests per hour                                                                                                        |
| limits.[].override | A map to override default limits for a specific key                                                                                        |


** License

Copyright Â© 2018 Cisco Systems
Distributed under the Eclipse Public License either version 1.0 or (at your option) any later version.
